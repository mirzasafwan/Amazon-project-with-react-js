{"ast":null,"code":"import { act } from \"react-dom/test-utils\";\nexport const initialState = {\n  cart: [],\n  user: null\n};\nexport const getCartTotal = cart => cart === null || cart === void 0 ? void 0 : cart.reduce((amount, item) => amount + item.price, 0);\n\nconst reducer = (state, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case \"Add_to_Cart\":\n      return { ...state,\n        cart: [...state.cart, action.item]\n      };\n\n    case \"Remove_From_Cart\":\n    case \"REMOVE_FROM_CART\":\n      const index = state.cart.findIndex(cartItem => cartItem.id === action.id);\n      let newCart = [...state.cart];\n\n      if (index >= 0) {\n        newCart.splice(index, 1);\n      } else {\n        console.warn('Cant remove, as cart is Empty');\n      }\n\n      return { ...state,\n        cart: newCart\n      };\n\n    case \"SET_USER\":\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Amazon project with react js/amazon-clone/src/reducer.js"],"names":["act","initialState","cart","user","getCartTotal","reduce","amount","item","price","reducer","state","action","console","log","type","index","findIndex","cartItem","id","newCart","splice","warn"],"mappings":"AAAA,SAASA,GAAT,QAAoB,sBAApB;AAEA,OAAO,MAAMC,YAAY,GAAC;AACtBC,EAAAA,IAAI,EAAC,EADiB;AAEtBC,EAAAA,IAAI,EAAC;AAFiB,CAAnB;AAKP,OAAO,MAAMC,YAAY,GAAEF,IAAD,IAC1BA,IAD0B,aAC1BA,IAD0B,uBAC1BA,IAAI,CAAEG,MAAN,CAAa,CAACC,MAAD,EAAQC,IAAR,KAAeD,MAAM,GAACC,IAAI,CAACC,KAAxC,EAA8C,CAA9C,CADO;;AAEP,MAAMC,OAAO,GAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAOA,MAAM,CAACG,IAAd;AACA,SAAK,aAAL;AACA,aAAM,EACF,GAAGJ,KADD;AAEFR,QAAAA,IAAI,EAAC,CAAC,GAAGQ,KAAK,CAACR,IAAV,EAAeS,MAAM,CAACJ,IAAtB;AAFH,OAAN;;AAKA,SAAK,kBAAL;AACI,SAAK,kBAAL;AACI,YAAMQ,KAAK,GAAGL,KAAK,CAACR,IAAN,CAAWc,SAAX,CAAsBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBP,MAAM,CAACO,EAA1D,CAAd;AAEA,UAAIC,OAAO,GAAG,CAAC,GAAGT,KAAK,CAACR,IAAV,CAAd;;AAEA,UAAGa,KAAK,IAAG,CAAX,EACA;AACII,QAAAA,OAAO,CAACC,MAAR,CAAeL,KAAf,EAAqB,CAArB;AACH,OAHD,MAGM;AACFH,QAAAA,OAAO,CAACS,IAAR,CAAa,+BAAb;AACH;;AACD,aAAM,EACF,GAAGX,KADD;AAEFR,QAAAA,IAAI,EAAEiB;AAFJ,OAAN;;AAIA,SAAK,UAAL;AACI,aAAM,EACF,GAAGT;AADD,OAAN;;AAIZ;AACI,aAAOA,KAAP;AA7BJ;AA+BH,CAjCD;;AAkCA,eAAeD,OAAf","sourcesContent":["import { act } from \"react-dom/test-utils\";\r\n\r\nexport const initialState={\r\n    cart:[],\r\n    user:null,\r\n};\r\n\r\nexport const getCartTotal=(cart)=>\r\ncart?.reduce((amount,item)=>amount+item.price,0);\r\nconst reducer=(state,action)=>{\r\n    console.log(action)\r\n    switch(action.type){\r\n    case \"Add_to_Cart\":\r\n    return{\r\n        ...state,\r\n        cart:[...state.cart,action.item],\r\n    };\r\n\r\n    case \"Remove_From_Cart\":\r\n        case \"REMOVE_FROM_CART\":\r\n            const index = state.cart.findIndex((cartItem) => cartItem.id === action.id);\r\n\r\n            let newCart = [...state.cart];\r\n\r\n            if(index >=0)\r\n            {\r\n                newCart.splice(index,1);\r\n            } else{\r\n                console.warn('Cant remove, as cart is Empty')\r\n            }\r\n            return{\r\n                ...state,\r\n                cart: newCart\r\n            }\r\n            case \"SET_USER\":\r\n                return{\r\n                    ...state,\r\n                    \r\n                }\r\n    default:\r\n        return state;\r\n    }\r\n}\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}